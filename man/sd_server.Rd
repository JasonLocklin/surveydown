% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server.R
\name{sd_server}
\alias{sd_server}
\title{Server Logic for a surveydown survey}
\usage{
sd_server(input, output, session, config, db = NULL)
}
\arguments{
\item{input}{The Shiny input object.}

\item{output}{The Shiny output object.}

\item{session}{The Shiny session object.}

\item{config}{A list containing configuration settings for the application.}

\item{db}{A list containing database connection information created using
sd_database() function. Defaults to \code{NULL}.}
}
\value{
This function does not return a value; it sets up the server-side logic for the Shiny application.
}
\description{
This function defines the server-side logic for a Shiny application, handling various
operations such as conditional display, progress tracking, page navigation, and database
updates.
}
\details{
The config list should include the following elements:
\itemize{
\item page_structure: A list defining the structure of survey pages.
\item page_ids: A vector of page identifiers.
\item question_ids: A vector of question identifiers.
\item show_if: A data frame defining conditions for showing questions.
\item skip_if: A data frame defining conditions for skipping pages.
\item skip_if_custom: A list of custom skip conditions.
\item show_if_custom: A list of custom show conditions.
\item start_page: The identifier of the starting page.
\item question_required: A vector of required question identifiers.
\item all_questions_required: A logical indicating if all questions are required.
}

The function performs the following tasks:
\itemize{
\item Initializes variables and reactive values.
\item Implements conditional display logic.
\item Tracks answered questions and updates the progress bar.
\item Handles page navigation and skip logic.
\item Manages required questions.
\item Performs database operations or saves to a local CSV file in preview mode.
}
}
\examples{
\dontrun{
  shinyApp(
    ui = sd_ui(),
    server = function(input, output, session) {
      sd_server(input, output, session, config = my_config, db = my_db)
    }
  )
}

}
