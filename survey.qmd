---
format:
  html:
    section-divs: false
server: shiny
include-before-body: hide_pages.js
execute:
  echo: false
theme: surveydown.scss
---

```{r}
#| context: setup
#| echo: false
#| warning: false
#| message: false

source('functions.R')
useShinyjs(rmd = TRUE)
```

::: {#welcome .sd-page}

# Welcome to my survey! 

Here is a question to get started. 

This question showcases what a "multiple choice" question looks like, which is created using `type = 'mc'` inside the `sd_question()` function.

It also is an example of the `show_if` feature (conditional display). If you choose the "Other" option, a second question pops up below asking to specify which other type of penguin is your favorite.

```{r}
sd_question(
  name   = 'penguins',
  type   = 'mc',
  label  = "Which is your favorite type of penguin?",
  option = c(
    'Adélie' = 'adelie',
    'Chinstrap' = 'chinstrap',
    'Gentoo' = 'gentoo',
    'Other' = 'other'
  )
)

sd_question(
  name  = "penguins_other",
  type  = "text",
  label = "Please specify the other penguin type:"
)

sd_next(next_page = 'skipif')
```

:::

::: {#skipif .sd-page}

# skip_if

This page showcases the `skip_if` feature, which allows you to skip forward in the survey based on different conditions. Depending on your choice, you'll go to a different page in the survey when you press the "Next" button.

```{r}
sd_question(
  name     = 'skip_question',
  type     = 'mc',
  required = TRUE,
  label    = "Where do you want to skip to?",
  option   = c(
    'Take me to the page on Question Types (the next page)' = 'question_types',
    'Skip to the end' = 'end'
  )
)

sd_next(next_page = 'questionTypes')
```

:::

::: {#questionTypes .sd-page}

# Question types

This page showcases some other question types.

Use `type = 'text'` to specify a text input type question:

```{r}
sd_question(
  name  = "silly_word",
  type  = "text",
  label = "Write a silly word:"
)
```

Use `type = 'numeric'` to specify a numeric input type:

```{r}
sd_question(
  name     = 'age',
  type     = 'numeric',
  required = TRUE,
  label    = "What's your age?",
  option   = NULL
)
```

Use `type = 'mc'` to specify a multiple choice type question with a single choice option:

```{r}
sd_question(
  name     = 'artist',
  type     = 'mc',
  required = TRUE,
  label    = "Which artist do you prefer most from this list?",
  option   = c(
    "Taylor Swift" = "taylor_swift",
    "Beyoncé"      = "beyonce",
    "Adele"        = "adele",
    "Rihanna"      = "rihanna",
    "Lady Gaga"    = "ladygaga",
    "Ed Sheeran"   = "ed_sheeran",
    "Drake"        = "drake"
  )
)
```

Use `type = 'mc_multiple'` to specify a multiple choice type question with multiple selection enabled:

```{r}
sd_question(
  name     = 'swift',
  type     = 'mc_multiple',
  required = TRUE,
  label    = "Which are your favorite Taylor Swift albums (select all that apply)?",
  option   = c(
    "Taylor Swift (2006)" = "taylor_swift",
    "Fearless (2008)"     = "fearless",
    "Speak Now (2010)"    = "speak_now",
    "Red (2012)"          = "red",
    "1989 (2014)"         = "1989",
    "Reputation (2017)"   = "reputation",
    "Lover (2019)"        = "lover",
    "Folklore (2020)"     = "folklore",
    "Evermore (2020)"     = "evermore",
    "Midnights (2022)"    = "midnights"
  )
)
```

Use `type = 'select'` to specify a drop down select type question:

```{r}
sd_question(
  name     = 'education',
  type     = 'select',
  required = TRUE,
  label    = "What is the highest level of education you have attained?",
  option   = c(
    "Did not attend high school" = "hs_no",
    "Some high school"           = "hs_some",
    "High school graduate"       = "hs_grad",
    "Some college"               = "college_some",
    "College"                    = "college_grad",
    "Graduate Work"              = "grad",
    "Prefer not to say"          = "no_response"
  )
)

sd_next(next_page = 'end')
```

:::

::: {#end .sd-page}

## Thanks for taking our survey!

:::

```{r}
#| context: server

sd_server(
  input = input,
  session = session,
  skip_if = tibble::tribble(
    ~condition, ~target_page, 
    "input$skip_question == 'end'",  "end"
  ),
  show_if = list(
    list(
      condition = function(input) input$penguins == 'other', 
      dependent_question = 'penguins',
      target_question = 'penguins_other'
    )
  )
)
```
